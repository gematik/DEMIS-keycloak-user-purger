# Default values for keycloak-user-purger.
debug:
  enable: false

# Run the job every night at 2 a.m.
cronJobSchedule: "0 2 * * *"

# Required Values for the Chart
required:
  suspend: false
  # Define the docker image
  image:
    # The repository where is stored the docker image "keycloak-user-purger"
    repository: europe-west3-docker.pkg.dev/gematik-all-infra-prod/demis-dev
    # The name of the image
    name: keycloak-user-purger
    # Overrides the image tag whose default is the chart appVersion. 
    # If not given, the Chart AppVersion will be used
    tag: null

# Define custom configuration values
# The Entries will be read from the given (external) Secrets and injected in the container with the same name.
# IMPORTANT: these values must be defined in the Secret Objects
config:
  # The (external) Secret Objects containing the API Key entry
  secret:
    # The (external) Secrets for Keycloak
    keycloak:
      portal:
        admin:
          # The name of the (external) Secret for Keycloak and the entry to be used
          name: KEYCLOAK_PORTAL_ADMIN_SECRET
          key: KEYCLOAK_PORTAL_ADMIN_PASSWORD
        clientSecret:
          # The name of the (external) Client-Secret for Keycloak and the entry to be used
          name: KEYCLOAK_PORTAL_CLIENT_SECRET_SECRET
          key: KEYCLOAK_PORTAL_CLIENT_SECRET

# Extra Labels to be added
# E.g.
# customLabels:
#   my-label: my-label-value
customLabels: {}

# Extra Environment Variables to be defined
customEnvVars:
  # Keycloak Specific
  KEYCLOAK_URL: "http://keycloak:8080/"
  KEYCLOAK_PORTAL_CLIENT_ID: "admin-cli"
  KEYCLOAK_PORTAL_ADMIN_USERNAME: "admin"
  PURGE_AFTER_HOURS: "48"
  ROOT_LOG_LEVEL: "INFO"

# Define custom Container Entrypoint and Arguments (e.g. JVM Tuning)
# If not given, the Entrypoint defined in Dockerfile will be used
application:
  entrypoint: ["java"]
  parameters: ["-XX:ActiveProcessorCount=2", "-XX:MaxRAMPercentage=80.0", "-XX:+TieredCompilation", "-XX:+UseSerialGC", "-jar", "-Xmx1G", "/app/app.jar"]

# Define Image Pull Secrets if using private registry
imagePullSecrets: []
imagePullPolicy: IfNotPresent
nameOverride: "keycloak-user-purger"
fullnameOverride: "keycloak-user-purger"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Annotations for Workload
annotations: {}

# Annotations for Pods
podAnnotations: {}

# Pod Security Context - applies to all containers in a Pod
podSecurityContext:
  # The GID to tell the Kubelet to modify permissions of a volume owned by a pod
  fsGroup: 10000
  # Determines when to apply fsGroup actions - "Always" is the default
  fsGroupChangePolicy: "OnRootMismatch"
  # Which GID container process is assigned
  runAsGroup: 10000
  # Determine whether container process starts as root (UID 0)
  runAsNonRoot: true
  # Which UID container process is assigned
  runAsUser: 10000

# Container Security Context for a single container - Takes precedence over PodSecurityContext
securityContext:
  #defines whether container can be granted privileges beyond the parent process spawing the process
  allowPrivilegeEscalation: false
  #Define whether the container has privileged access e.g. CAP_SYS_ADMIN capability and SELinux spc_t type
  privileged: false
  #Usually no longer required. Determines whether /proc is masked to the container. Do not mount /proc from a host to a container
  procMount: Default
  # The SELinux context to be applied to the container. Must not be explicitly set to Unconfined.
  seccompProfile:
    type: "RuntimeDefault"
  #Which GID container process is assigned
  runAsGroup: 10000
  # Determine whether container process starts as root (UID 0)
  runAsNonRoot: true
  #Which UID container process is assigned
  runAsUser: 10000
  # Sets the file system as read-only
  readOnlyRootFilesystem: true
  #Ability to remove and /or add Linux Capabilities
  capabilities:
    drop:
      - all

# Default Resources
resources:
  limits:
    cpu: "300m"
    memory: "1Gi"
  requests:
    cpu: "100m"
    memory: "512Mi"

nodeSelector: {}

tolerations: []

affinity: {}

# Enable Istio
istio:
  enable: false
  healthPort: 15020
  quitPort: 15020
